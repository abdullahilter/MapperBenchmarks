using AutoMapper;
using BenchmarkDotNet.Attributes;
using Mapster;
using Nelibur.ObjectMapper;
using MapperBenchmarks.Dtos;
using MapperBenchmarks.Entities;

namespace MapperBenchmarks;

[InProcess]
public class Benchmarks
{
    private readonly IMapper _autoMapper;
    private readonly SpotifyAlbumDto _spotifyAlbumDto;

    public Benchmarks()
    {
        var json = File.ReadAllText("Data/spotifyAlbum.json");

        _spotifyAlbumDto = SpotifyAlbumDto.FromJson(json)!;

        //Automapper Configuration 
        var mapperConfig = new MapperConfiguration(cfg =>
        {
            cfg.CreateMap<SpotifyAlbumDto, SpotifyAlbum>();
            cfg.CreateMap<CopyrightDto, Copyright>();
            cfg.CreateMap<ArtistDto, Artist>();
            cfg.CreateMap<ExternalIdsDto, ExternalIds>();
            cfg.CreateMap<ExternalUrlsDto, ExternalUrls>();
            cfg.CreateMap<TracksDto, Tracks>();
            cfg.CreateMap<ImageDto, Image>();
            cfg.CreateMap<ItemDto, Item>();
            cfg.CreateMap<SpotifyAlbum, SpotifyAlbumDto>();
            cfg.CreateMap<Copyright, CopyrightDto>();
            cfg.CreateMap<Artist, ArtistDto>();
            cfg.CreateMap<ExternalIds, ExternalIdsDto>();
            cfg.CreateMap<ExternalUrls, ExternalUrlsDto>();
            cfg.CreateMap<Tracks, TracksDto>();
            cfg.CreateMap<Image, ImageDto>();
            cfg.CreateMap<Item, ItemDto>();
        });
        _autoMapper = mapperConfig.CreateMapper();

        //TinyMapper Configuration 
        TinyMapper.Bind<SpotifyAlbumDto, SpotifyAlbum>();
        TinyMapper.Bind<CopyrightDto, Copyright>();
        TinyMapper.Bind<ArtistDto, Artist>();
        TinyMapper.Bind<ExternalIdsDto, ExternalIds>();
        TinyMapper.Bind<ExternalUrlsDto, ExternalUrls>();
        TinyMapper.Bind<TracksDto, Tracks>();
        TinyMapper.Bind<ImageDto, Image>();
        TinyMapper.Bind<ItemDto, Item>();
        TinyMapper.Bind<SpotifyAlbum, SpotifyAlbumDto>();
        TinyMapper.Bind<Copyright, CopyrightDto>();
        TinyMapper.Bind<Artist, ArtistDto>();
        TinyMapper.Bind<ExternalIds, ExternalIdsDto>();
        TinyMapper.Bind<ExternalUrls, ExternalUrlsDto>();
        TinyMapper.Bind<Tracks, TracksDto>();
        TinyMapper.Bind<Image, ImageDto>();
        TinyMapper.Bind<Item, ItemDto>();

        //ExpressMapper Configuration 
        ExpressMapper.Mapper.Register<SpotifyAlbumDto, SpotifyAlbum>();
        ExpressMapper.Mapper.Register<CopyrightDto, Copyright>();
        ExpressMapper.Mapper.Register<ArtistDto, Artist>();
        ExpressMapper.Mapper.Register<ExternalIdsDto, ExternalIds>();
        ExpressMapper.Mapper.Register<ExternalUrlsDto, ExternalUrls>();
        ExpressMapper.Mapper.Register<TracksDto, Tracks>();
        ExpressMapper.Mapper.Register<ImageDto, Image>();
        ExpressMapper.Mapper.Register<ItemDto, Item>();
        ExpressMapper.Mapper.Register<SpotifyAlbum, SpotifyAlbumDto>();
        ExpressMapper.Mapper.Register<Copyright, CopyrightDto>();
        ExpressMapper.Mapper.Register<Artist, ArtistDto>();
        ExpressMapper.Mapper.Register<ExternalIds, ExternalIdsDto>();
        ExpressMapper.Mapper.Register<ExternalUrls, ExternalUrlsDto>();
        ExpressMapper.Mapper.Register<Tracks, TracksDto>();
        ExpressMapper.Mapper.Register<Image, ImageDto>();
        ExpressMapper.Mapper.Register<Item, ItemDto>();

        //Mapster don't need configuration
        //AgileMapper don't need configuration
    }

    [Benchmark]
    public SpotifyAlbum MapWithAgileMapper()
    {
        var spotifyalbum = AgileObjects.AgileMapper.Mapper.Map(_spotifyAlbumDto).ToANew<SpotifyAlbum>();
        return spotifyalbum;
    }

    [Benchmark]
    public SpotifyAlbum MapWithTinyMapper()
    {
        var spotifyAlbum = TinyMapper.Map<SpotifyAlbum>(_spotifyAlbumDto);
        return spotifyAlbum;
    }

    [Benchmark]
    public SpotifyAlbum MapWithExpressMapper()
    {
        var spotifyalbum = ExpressMapper.Mapper.Map<SpotifyAlbumDto, SpotifyAlbum>(_spotifyAlbumDto);
        return spotifyalbum;
    }

    [Benchmark]
    public SpotifyAlbum MapWithAutoMapper()
    {
        var spotifyalbum = _autoMapper.Map<SpotifyAlbum>(_spotifyAlbumDto);
        return spotifyalbum;
    }

    [Benchmark]
    public SpotifyAlbum MapWithManualMapping()
    {
        //Generated by MappingGenerator
        var spotifyalbum = _spotifyAlbumDto.Map();
        return spotifyalbum;
    }

    [Benchmark]
    public SpotifyAlbum MapWithMapster()
    {
        var spotifyalbum = _spotifyAlbumDto.Adapt<SpotifyAlbum>();
        return spotifyalbum;
    }
}